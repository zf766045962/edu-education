<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.RecruitStudentsPlanMapper">
    <resultMap id="BaseResultMap" type="com.entity.RecruitStudentsPlan">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="yxdm" property="yxdm" jdbcType="VARCHAR"/>
        <result column="yxdh" property="yxdh" jdbcType="VARCHAR"/>
        <result column="yxdhmc" property="yxdhmc" jdbcType="VARCHAR"/>
        <result column="szd" property="szd" jdbcType="VARCHAR"/>
        <result column="sf985" property="sf985" jdbcType="INTEGER"/>
        <result column="sf211" property="sf211" jdbcType="INTEGER"/>
        <result column="bxlxdm" property="bxlxdm" jdbcType="INTEGER"/>
        <result column="bxlxmc" property="bxlxmc" jdbcType="VARCHAR"/>
        <result column="ssdm" property="ssdm" jdbcType="INTEGER"/>
        <result column="ssmc" property="ssmc" jdbcType="VARCHAR"/>
        <result column="zgdm" property="zgdm" jdbcType="INTEGER"/>
        <result column="zgmc" property="zgmc" jdbcType="VARCHAR"/>
        <result column="ccdm" property="ccdm" jdbcType="INTEGER"/>
        <result column="ccmc" property="ccmc" jdbcType="VARCHAR"/>
        <result column="zydm" property="zydm" jdbcType="VARCHAR"/>
        <result column="sbdm2" property="sbdm2" jdbcType="VARCHAR"/>
        <result column="zymc" property="zymc" jdbcType="VARCHAR"/>
        <result column="xzdmxg" property="xzdmxg" jdbcType="VARCHAR"/>
        <result column="xzdm" property="xzdm" jdbcType="CHAR"/>
        <result column="xzmc" property="xzmc" jdbcType="VARCHAR"/>
        <result column="sfbz" property="sfbz" jdbcType="VARCHAR"/>
        <result column="kldm" property="kldm" jdbcType="VARCHAR"/>
        <result column="ksklmc" property="ksklmc" jdbcType="VARCHAR"/>
        <result column="pcdm" property="pcdm" jdbcType="VARCHAR"/>
        <result column="pcmc" property="pcmc" jdbcType="VARCHAR"/>
        <result column="kslxdm" property="kslxdm" jdbcType="VARCHAR"/>
        <result column="kslxmc" property="kslxmc" jdbcType="VARCHAR"/>
        <result column="xkkmyq" property="xkkmyq" jdbcType="VARCHAR"/>
        <result column="xkkmyqzw" property="xkkmyqzw" jdbcType="VARCHAR"/>
        <result column="zsjhs" property="zsjhs" jdbcType="INTEGER"/>
        <result column="bz" property="bz" jdbcType="VARCHAR"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
        <result column="km1" property="km1" jdbcType="VARCHAR"/>
        <result column="km2" property="km2" jdbcType="VARCHAR"/>
        <result column="km3" property="km3" jdbcType="VARCHAR"/>
        <result column="zydmNew" property="zydmNew" jdbcType="VARCHAR"/>
        <result column="sfsyl" property="sfsyl" jdbcType="VARCHAR"/>
        <result column="nf" property="nf" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, yxdm, yxdh, yxdhmc, szd, sf985, sf211, bxlxdm, bxlxmc, ssdm, ssmc, zgdm, zgmc,
        ccdm, ccmc, zydm, sbdm2, zymc, xzdmxg, xzdm, xzmc, sfbz, kldm, ksklmc, pcdm, pcmc,
        kslxdm, kslxmc, xkkmyq, xkkmyqzw, zsjhs, bz, gmt_create, gmt_modified, km1, km2, km3, zydmNew
    </sql>
    <update id="updateSyzsjhsByTemp">
        update recruit_students_plan a, recruit_students_plan_temp b
        set a.zsjhs_sy = b.zsjhs_sy
        where a.yxdh = b.yxdh and a.zszymc = b.zszymc and a.nf = #{year}
    </update>
    <update id="updateSyzsjhsToZero">
        update recruit_students_plan a
        set zsjhs_sy = 0
        where a.nf = #{year} and (yxdh, zszymc) not in (select
                                                            yxdh,
                                                            zszymc
                                                        from recruit_students_plan_temp)
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from recruit_students_plan
        where id = #{id,jdbcType=BIGINT}
    </select>
    <insert id="insertRecruitStudentsPlanBatch" parameterType="java.util.List">
        insert into recruit_students_plan (
        yxdm
        , yxdh
        , yxdhmc
        , szd
        , sf985
        , sf211
        , sfsyl
        , bxlxdm
        , bxlxmc
        , ssdm
        , ssmc
        , zgdm
        , zgmc
        , ccdm
        , ccmc
        , zydm
        , sbdm2
        , zymc
        , xzdmxg
        , xzdm
        , xzmc
        , sfbz
        , kldm
        , ksklmc
        , pcdm
        , pcmc
        , kslxdm
        , kslxmc
        , xkkmyq
        , xkkmyqzw
        , zsjhs
        , bz
        ,km1
        ,km2
        ,km3
        ,zydm_new
        ,nf
        ,zsjhs_sy
        ,zszymc)
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.yxdm,jdbcType=VARCHAR}
            , #{item.yxdh,jdbcType=VARCHAR}
            , #{item.yxdhmc,jdbcType=VARCHAR}
            , #{item.szd,jdbcType=VARCHAR}
            , #{item.sf985,jdbcType=INTEGER}
            , #{item.sf211,jdbcType=INTEGER}
            , #{item.sfsyl,jdbcType=VARCHAR}
            , #{item.bxlxdm,jdbcType=INTEGER}
            , #{item.bxlxmc,jdbcType=VARCHAR}
            , #{item.ssdm,jdbcType=INTEGER}
            , #{item.ssmc,jdbcType=VARCHAR}
            , #{item.zgdm,jdbcType=INTEGER}
            , #{item.zgmc,jdbcType=VARCHAR}
            , #{item.ccdm,jdbcType=INTEGER}
            , #{item.ccmc,jdbcType=VARCHAR}
            , #{item.zydm,jdbcType=VARCHAR}
            , #{item.sbdm2,jdbcType=VARCHAR}
            , #{item.zymc,jdbcType=VARCHAR}
            , #{item.xzdmxg,jdbcType=VARCHAR}
            , #{item.xzdm,jdbcType=CHAR}
            , #{item.xzmc,jdbcType=VARCHAR}
            , #{item.sfbz,jdbcType=VARCHAR}
            , #{item.kldm,jdbcType=VARCHAR}
            , #{item.ksklmc,jdbcType=VARCHAR}
            , #{item.pcdm,jdbcType=VARCHAR}
            , #{item.pcmc,jdbcType=VARCHAR}
            , #{item.kslxdm,jdbcType=VARCHAR}
            , #{item.kslxmc,jdbcType=VARCHAR}
            , #{item.xkkmyq,jdbcType=VARCHAR}
            , #{item.xkkmyqzw,jdbcType=VARCHAR}
            , #{item.zsjhs,jdbcType=INTEGER}
            , #{item.bz,jdbcType=VARCHAR}
            , #{item.km1,jdbcType=VARCHAR}
            , #{item.km2,jdbcType=VARCHAR}
            , #{item.km3,jdbcType=VARCHAR}
            , #{item.zydmNew,jdbcType=VARCHAR}
            , #{item.nf,jdbcType=VARCHAR}
            , #{item.zsjhsSy,jdbcType=INTEGER}
            , #{item.zszymc,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
    <insert id="insertRecruitStudentsPlanTempBatch">
        insert into recruit_students_plan_temp (
        yxdm
        , yxdh
        , yxdhmc
        , szd
        , sf985
        , sf211
        , sfsyl
        , bxlxdm
        , bxlxmc
        , ssdm
        , ssmc
        , zgdm
        , zgmc
        , ccdm
        , ccmc
        , zydm
        , sbdm2
        , zymc
        , xzdmxg
        , xzdm
        , xzmc
        , sfbz
        , kldm
        , ksklmc
        , pcdm
        , pcmc
        , kslxdm
        , kslxmc
        , xkkmyq
        , xkkmyqzw
        , zsjhs
        , bz
        ,km1
        ,km2
        ,km3
        ,zydm_new
        ,nf
        ,zsjhs_sy
        ,zszymc)
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.yxdm,jdbcType=VARCHAR}
            , #{item.yxdh,jdbcType=VARCHAR}
            , #{item.yxdhmc,jdbcType=VARCHAR}
            , #{item.szd,jdbcType=VARCHAR}
            , #{item.sf985,jdbcType=INTEGER}
            , #{item.sf211,jdbcType=INTEGER}
            , #{item.sfsyl,jdbcType=VARCHAR}
            , #{item.bxlxdm,jdbcType=INTEGER}
            , #{item.bxlxmc,jdbcType=VARCHAR}
            , #{item.ssdm,jdbcType=INTEGER}
            , #{item.ssmc,jdbcType=VARCHAR}
            , #{item.zgdm,jdbcType=INTEGER}
            , #{item.zgmc,jdbcType=VARCHAR}
            , #{item.ccdm,jdbcType=INTEGER}
            , #{item.ccmc,jdbcType=VARCHAR}
            , #{item.zydm,jdbcType=VARCHAR}
            , #{item.sbdm2,jdbcType=VARCHAR}
            , #{item.zymc,jdbcType=VARCHAR}
            , #{item.xzdmxg,jdbcType=VARCHAR}
            , #{item.xzdm,jdbcType=CHAR}
            , #{item.xzmc,jdbcType=VARCHAR}
            , #{item.sfbz,jdbcType=VARCHAR}
            , #{item.kldm,jdbcType=VARCHAR}
            , #{item.ksklmc,jdbcType=VARCHAR}
            , #{item.pcdm,jdbcType=VARCHAR}
            , #{item.pcmc,jdbcType=VARCHAR}
            , #{item.kslxdm,jdbcType=VARCHAR}
            , #{item.kslxmc,jdbcType=VARCHAR}
            , #{item.xkkmyq,jdbcType=VARCHAR}
            , #{item.xkkmyqzw,jdbcType=VARCHAR}
            , #{item.zsjhs,jdbcType=INTEGER}
            , #{item.bz,jdbcType=VARCHAR}
            , #{item.km1,jdbcType=VARCHAR}
            , #{item.km2,jdbcType=VARCHAR}
            , #{item.km3,jdbcType=VARCHAR}
            , #{item.zydmNew,jdbcType=VARCHAR}
            , #{item.nf,jdbcType=VARCHAR}
            , #{item.zsjhsSy,jdbcType=INTEGER}
            , #{item.zszymc,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
    <insert id="insertTempToReal">
        insert into recruit_students_plan (
            yxdm
            , yxdh
            , yxdhmc
            , szd
            , sf985
            , sf211
            , sfsyl
            , bxlxdm
            , bxlxmc
            , ssdm
            , ssmc
            , zgdm
            , zgmc
            , ccdm
            , ccmc
            , zydm
            , sbdm2
            , zymc
            , xzdmxg
            , xzdm
            , xzmc
            , sfbz
            , kldm
            , ksklmc
            , pcdm
            , pcmc
            , kslxdm
            , kslxmc
            , xkkmyq
            , xkkmyqzw
            , zsjhs
            , bz
            , km1
            , km2
            , km3
            , zydm_new
            , nf
            , zsjhs_sy
            , zszymc) select
                          yxdm,
                          yxdh,
                          yxdhmc,
                          szd,
                          sf985,
                          sf211,
                          sfsyl,
                          bxlxdm,
                          bxlxmc,
                          ssdm,
                          ssmc,
                          zgdm,
                          zgmc,
                          ccdm,
                          ccmc,
                          zydm,
                          sbdm2,
                          zymc,
                          xzdmxg,
                          xzdm,
                          xzmc,
                          sfbz,
                          kldm,
                          ksklmc,
                          pcdm,
                          pcmc,
                          kslxdm,
                          kslxmc,
                          xkkmyq,
                          xkkmyqzw,
                          zsjhs,
                          bz,
                          km1,
                          km2,
                          km3,
                          zydm_new,
                          nf,
                          zsjhs_sy,
                          zszymc
                      from recruit_students_plan_temp
    </insert>
    <select id="countSchool" resultType="int">
        SELECT count(distinct yxdh)
        FROM (
        SELECT a.yxdh,a.zszymc
        FROM recruit_students_plan a, wntdqk_hz b
        WHERE a.yxdh = b.school_code
        AND a.zymc = b.zymc
        AND a.nf=#{nf,jdbcType=VARCHAR}
        and a.zsjhs_sy>0
        AND
        (
        a.km1
        IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        ,'00'
        )
        or
        a.km2 IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
        or
        a.km3 IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
        )
        <if test="provinceCodes != null">
            AND ssdm IN (
            <foreach collection="provinceCodes" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="zymc !=null and zymc !=''">
            and (
            a.zszymc like concat('%',#{zymc,jdbcType=VARCHAR},'%')
            or
            a.bz like concat('%',#{zymc,jdbcType=VARCHAR},'%')
            )
        </if>
        <if test="schoolCodes != null">
            AND a.yxdh IN (
            <foreach collection="schoolCodes" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        group by a.yxdh,a.zszymc,ds having avg(b.ckzs)&lt;=#{max} and avg(b.ckzs)&gt;=#{min}
        ) t
    </select>
    <select id="countMajor" resultType="int">
        select count(*) from (SELECT a.yxdh,a.zszymc
        FROM recruit_students_plan a, wntdqk_hz b
        WHERE a.yxdh = b.school_code
        AND a.zymc = b.zymc
        AND a.nf=#{nf,jdbcType=VARCHAR}
        and a.zsjhs_sy>0
        AND (
        a.km1
        IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        ,'00'
        )
        or
        a.km2 IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
        or
        a.km3 IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
        )
        <if test="provinceCodes != null">
            AND ssdm IN (
            <foreach collection="provinceCodes" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="zymc !=null and zymc !=''">
            and (
            a.zszymc like concat('%',#{zymc,jdbcType=VARCHAR},'%')
            or
            a.bz like concat('%',#{zymc,jdbcType=VARCHAR},'%')
            )
        </if>
        <if test="schoolCodes != null">
            AND a.yxdh IN (
            <foreach collection="schoolCodes" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        group by a.yxdh,a.zszymc,ds having avg(b.ckzs)&lt;=#{max} and avg(b.ckzs)&gt;=#{min}
        ) a
    </select>
    <select id="listRecruitStudentsPlan" resultType="com.vo.RecruitStudentsPlanVo">
        SELECT
        a.zszymc,
        a.xzdm as xzmc,
        a.sfbz,
        a.xkkmyqzw,
        a.ccmc,
        concat(a.ssmc,'.',a.szd) AS ssmcSzd,
        FORMAT(avg(b.ckzs),4) ckzs,
        a.zsjhs,
        a.yxdhmc,
        ifnull(a.bz,'') bz,
        a.bxlxmc,
        a.sfsyl,
        b.dsms,
        CASE a.sf985 WHEN 1 THEN '是' ELSE '否'
        END AS sf985Name,
        CASE a.sf211 WHEN 1 THEN '是' ELSE '否'
        END AS sf211Name,
        concat(a.yxdh,'|',a.yxdhmc,'|',a.zydm,'|',a.zszymc,'|',FORMAT(avg(b.ckzs),4),'|',a.xzdm) AS zhcs,
        CASE ifnull((SELECT c.id
        FROM hxzy c
        WHERE a.yxdh = c.school_code AND c.major_code = a.zydm and FORMAT(avg(b.ckzs),4)=c.reference_index and
        c.candidate_id = #{candidateId} limit 1), 'aaa')
        WHEN 'aaa'
        THEN '0'
        ELSE '1' END AS sfsc
        FROM recruit_students_plan a left join wntdqk_hz b on a.yxdh = b.school_code
        AND a.zymc = b.zymc
        WHERE
        b.ckzs is not null
        and a.nf=#{nf,jdbcType=VARCHAR}
        and a.zsjhs_sy>0
        AND (
        a.km1
        IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        ,'00'
        )
        or
        a.km2 IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
        or
        a.km3 IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
        )
        <if test="provinceCodes != null">
            AND ssdm IN (
            <foreach collection="provinceCodes" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="zymc !=null and zymc !=''">
            and (
            a.zszymc like concat('%',#{zymc,jdbcType=VARCHAR},'%')
            or
            a.bz like concat('%',#{zymc,jdbcType=VARCHAR},'%')
            )
        </if>
        <if test="schoolCodes != null">
            AND a.yxdh IN (
            <foreach collection="schoolCodes" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="schoolName !=null and schoolName !=''">
            AND yxdhmc LIKE concat(#{schoolName},'%')
        </if>
        <if test="majorName !=null and majorName !=''">
            AND a.zszymc LIKE concat(#{majorName},'%')
        </if>
        group by a.yxdh,a.zszymc,ds having avg(b.ckzs)&lt;=#{max} and avg(b.ckzs)&gt;=#{min}
    </select>
    <select id="findZymc" resultType="com.entity.RecruitStudentsPlan">
        select *
        from recruit_students_plan
        where nf = #{year}
              and zymc like '%类%' and bz like '%$%'
    </select>
    <delete id="deleteRecruitStudentsPlanByBz">
        delete from recruit_students_plan
        where nf = #{year}
              and zymc like '%类%' and bz like '%$%'
    </delete>
</mapper>