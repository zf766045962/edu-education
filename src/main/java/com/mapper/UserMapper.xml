<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.entity.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="salt" property="salt" jdbcType="CHAR"/>
        <result column="role_id" property="roleId" jdbcType="BIGINT"/>
        <result column="last_login_date" property="lastLoginDate" jdbcType="TIMESTAMP"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="CHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_name, nick_name, password, salt, role_id, last_login_date, gmt_create, gmt_modified, 
    status
  </sql>
    <select id="getUserById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
         id
         , user_name
         , nick_name
         , role_id
        from user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="getUserByName" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        id
        ,user_name
        ,nick_name
        ,password
        ,salt
        ,role_id
        FROM user WHERE user_name = #{userName}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <select id="listUser" resultType="com.vo.UserVo">
        SELECT
        id
        ,user_name
        ,nick_name
        ,(SELECT role_name FROM role WHERE role.id=role_id) AS RoleName
        ,status
        ,last_login_date
        FROM user
        <where>
            <if test="userName!=null and userName!=''">
                user_name like concat(#{userName},'%')
            </if>
            <if test="nickName!=null and nickName!=''">
                AND nick_name like concat(#{nickName},'%')
            </if>
        </where>
    </select>
    <insert id="insertSelective" parameterType="com.entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="nickName != null">
                nick_name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="lastLoginDate != null">
                last_login_date,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=CHAR},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=BIGINT},
            </if>
            <if test="lastLoginDate != null">
                #{lastLoginDate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.entity.User">
        update user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=CHAR},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=BIGINT},
            </if>
            <if test="lastLoginDate != null">
                last_login_date = #{lastLoginDate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.entity.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=CHAR},
      role_id = #{roleId,jdbcType=BIGINT},
      last_login_date = #{lastLoginDate,jdbcType=TIMESTAMP},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>