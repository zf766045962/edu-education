<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.WntdqkMapper">
    <resultMap id="BaseResultMap" type="com.entity.Wntdqk">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="school_code" property="schoolCode" jdbcType="VARCHAR"/>
        <result column="school_name" property="schoolName" jdbcType="VARCHAR"/>
        <result column="zydm" property="zydm" jdbcType="VARCHAR"/>
        <result column="zymc" property="zymc" jdbcType="VARCHAR"/>
        <result column="kl" property="kl" jdbcType="VARCHAR"/>
        <result column="nf" property="nf" jdbcType="VARCHAR"/>
        <result column="tdrs" property="tdrs" jdbcType="INTEGER"/>
        <result column="pjf" property="pjf" jdbcType="INTEGER"/>
        <result column="zdf" property="zdf" jdbcType="INTEGER"/>
        <result column="tdmc" property="tdmc" jdbcType="INTEGER"/>
        <result column="pc" property="pc" jdbcType="INTEGER"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
        <result column="ckzs" property="ckzs" jdbcType="DECIMAL"/>
        <result column="ds" property="ds" jdbcType="VARCHAR"/>
        <result column="zsjhs" property="zsjhs" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, school_code, school_name, zydm, zymc, kl, nf, tdrs, pjf, zdf, tdmc, pc, gmt_create,
        gmt_modified, zkzs, ds
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from wntdqk
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="findZymc" resultType="com.entity.Wntdqk">
        select *
        from wntdqk
        where nf = #{year}
              and zymc like '%类%' and bz like '%$%'
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM wntdqk
        WHERE id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteWntdqkByBz">
        delete from wntdqk
        where nf = #{year}
              and zymc like '%类%' and bz like '%$%'
    </delete>
    <insert id="insertWntdqkBatch" parameterType="java.util.List">
        insert into wntdqk (
        school_code
        , school_name
        ,zydm
        , zymc
        , kl
        , nf
        , tdrs
        , pjf
        , zdf
        , tdmc
        , pc
        ,ckzs
        , ds
        ,zsjhs
        , gmt_create
        ,zszymc
        ,bz
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.schoolCode,jdbcType=VARCHAR}
            , #{item.schoolName,jdbcType=VARCHAR}
            ,#{item.zydm,jdbcType=VARCHAR}
            , #{item.zymc,jdbcType=VARCHAR}
            , #{item.kl,jdbcType=VARCHAR}
            , #{item.nf,jdbcType=VARCHAR}
            , #{item.tdrs,jdbcType=INTEGER}
            , #{item.pjf,jdbcType=INTEGER}
            , #{item.zdf,jdbcType=INTEGER}
            , #{item.tdmc,jdbcType=INTEGER}
            , #{item.pc,jdbcType=INTEGER}
            , #{item.ckzs,jdbcType=DECIMAL}
            , #{item.ds,jdbcType=VARCHAR}
            , #{item.zsjhs,jdbcType=INTEGER}
            , #{item.gmtCreate,jdbcType=TIMESTAMP}
            , #{item.zszymc,jdbcType=VARCHAR}
            , #{item.bz,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
    <insert id="insertSelective" parameterType="com.entity.Wntdqk">
        insert into wntdqk
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="schoolCode != null">
                school_code,
            </if>
            <if test="schoolName != null">
                school_name,
            </if>
            <if test="zydm != null">
                zydm,
            </if>
            <if test="zymc != null">
                zymc,
            </if>
            <if test="kl != null">
                kl,
            </if>
            <if test="nf != null">
                nf,
            </if>
            <if test="tdrs != null">
                tdrs,
            </if>
            <if test="pjf != null">
                pjf,
            </if>
            <if test="zdf != null">
                zdf,
            </if>
            <if test="tdmc != null">
                tdmc,
            </if>
            <if test="pc != null">
                pc,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="schoolCode != null">
                #{schoolCode,jdbcType=VARCHAR},
            </if>
            <if test="schoolName != null">
                #{schoolName,jdbcType=VARCHAR},
            </if>
            <if test="zydm != null">
                #{zydm,jdbcType=VARCHAR},
            </if>
            <if test="zymc != null">
                #{zymc,jdbcType=VARCHAR},
            </if>
            <if test="kl != null">
                #{kl,jdbcType=VARCHAR},
            </if>
            <if test="nf != null">
                #{nf,jdbcType=VARCHAR},
            </if>
            <if test="tdrs != null">
                #{tdrs,jdbcType=INTEGER},
            </if>
            <if test="pjf != null">
                #{pjf,jdbcType=INTEGER},
            </if>
            <if test="zdf != null">
                #{zdf,jdbcType=INTEGER},
            </if>
            <if test="tdmc != null">
                #{tdmc,jdbcType=INTEGER},
            </if>
            <if test="pc != null">
                #{pc,jdbcType=INTEGER},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <insert id="insertTempToReal">
        insert into wntdqk (
            school_code
            , school_name
            , zydm
            , zymc
            , kl
            , nf
            , tdrs
            , pjf
            , zdf
            , tdmc
            , pc
            , ckzs
            , ds
            , dsms
            , zsjhs
            , gmt_create
            , zszymc
            , bz
        )
            select
                school_code,
                school_name,
                zydm,
                zymc,
                kl,
                nf,
                tdrs,
                pjf,
                zdf,
                tdmc,
                pc,
                ckzs,
                ds,
                dsms,
                zsjhs,
                now(),
                zszymc,
                bz
            from wntdqk_hz
    </insert>
    <insert id="insertWntdqkTempBatch">
        insert into wntdqk_hz (
        school_code
        , school_name
        ,zydm
        , zymc
        , kl
        , nf
        , tdrs
        , pjf
        , zdf
        , tdmc
        , pc
        ,ckzs
        , bz
        , ds
        ,dsms
        ,zsjhs
        , gmt_create
        ,zszymc
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.schoolCode,jdbcType=VARCHAR}
            , #{item.schoolName,jdbcType=VARCHAR}
            ,#{item.zydm,jdbcType=VARCHAR}
            , #{item.zymc,jdbcType=VARCHAR}
            , #{item.kl,jdbcType=VARCHAR}
            , #{item.nf,jdbcType=VARCHAR}
            , #{item.tdrs,jdbcType=INTEGER}
            , #{item.pjf,jdbcType=INTEGER}
            , #{item.zdf,jdbcType=INTEGER}
            , #{item.tdmc,jdbcType=INTEGER}
            , #{item.pc,jdbcType=INTEGER}
            , #{item.ckzs,jdbcType=DECIMAL}
            , #{item.bz,jdbcType=VARCHAR}
            , #{item.ds,jdbcType=VARCHAR}
            , #{item.dsms,jdbcType=VARCHAR}
            , #{item.zsjhs,jdbcType=INTEGER}
            , #{item.gmtCreate,jdbcType=TIMESTAMP}
            , #{item.zszymc,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.entity.Wntdqk">
        update wntdqk
        <set>
            <if test="schoolCode != null">
                school_code = #{schoolCode,jdbcType=VARCHAR},
            </if>
            <if test="schoolName != null">
                school_name = #{schoolName,jdbcType=VARCHAR},
            </if>
            <if test="zydm != null">
                zydm = #{zydm,jdbcType=VARCHAR},
            </if>
            <if test="zymc != null">
                zymc = #{zymc,jdbcType=VARCHAR},
            </if>
            <if test="kl != null">
                kl = #{kl,jdbcType=VARCHAR},
            </if>
            <if test="nf != null">
                nf = #{nf,jdbcType=VARCHAR},
            </if>
            <if test="tdrs != null">
                tdrs = #{tdrs,jdbcType=INTEGER},
            </if>
            <if test="pjf != null">
                pjf = #{pjf,jdbcType=INTEGER},
            </if>
            <if test="zdf != null">
                zdf = #{zdf,jdbcType=INTEGER},
            </if>
            <if test="tdmc != null">
                tdmc = #{tdmc,jdbcType=INTEGER},
            </if>
            <if test="pc != null">
                pc = #{pc,jdbcType=INTEGER},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="generateDsms" parameterType="java.lang.String">
        insert into wntdqk_hz (school_code, school_name, zymc, dsms)
            select
                school_code,
                "",
                zymc,
                group_concat(ds, '指数：', format(ckzs * 100, 2), '%', '、计划数：', zsjhs)
            from wntdqk
            where nf = #{nf}
            group by school_code, zymc, ds
            having count(*) > 1
            order by ds, school_code, zymc
    </update>
    <update id="updateDsms" parameterType="java.lang.String">
        update wntdqk a, wntdqk_hz b
        set a.dsms = b.dsms
        where a.school_code = b.school_code and a.zymc = b.zymc and a.nf = #{year}
    </update>
    <update id="updateBz">
        UPDATE wntdqk a, recruit_students_plan b
        SET a.bz = b.bz
        WHERE a.school_code = b.yxdh AND a.zymc = b.zymc AND a.nf = #{year} and b.nf = #{planTime}
    </update>
</mapper>